allc: 100

# 10 registers: [0] to [9]
var: stack, [10]
jmp: main

# int sum(int l, int r)
lbl: sum
add: [1], [2]
incr: $stack, -1
jmp: $stack

lbl: main
# var a = 0
var: a, $stack
mov: $a, 0
incr: $stack, 1
# var i = 0
var: i, $stack
mov: $i, 0
incr: $stack, 1

# loop {
lbl: startLoop
# a = sum(a, 5)
mov: [1], $a
mov: [2], 5
add: [-1], 4
mov: $stack, [0]
incr: $stack, 1
jmp: sum
mov: $a, [0]
# i = i + 1
add: $i, 1
mov: $i, [0]
# if (i == 10) break;
eq: $i, 10000000
jc: [0], endLoop
jmp: startLoop
# }
lbl: endLoop

print_num: 1, $a
